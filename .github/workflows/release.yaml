name: Release
# Release workflow builds the binaries for a release, and then publishes them to a newly created GitHub release.

on:
  release:
    types: [ created ]
  push:
    branches:
      - '**'
      - '!gh-pages'

jobs:
#  build-linux:
#    name: Create linux binary
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout 🛎️
#        uses: actions/checkout@v2
#
#      - name: Setup Flutter 🧰
#        uses: subosito/flutter-action@v1
#        with:
#          flutter-version: '2.2.2'
#
#      - name: Build 🏭
#        run: |
#          sudo apt-get -y install clang cmake ninja-build pkg-config libgtk-3-dev
#          flutter config --enable-linux-desktop
#          make build-linux
#          pushd build/linux/x64/release/bundle
#          zip -r ../../../../dam-linux-x64.zip .
#          popd
#      - name: Upload the artifacts 📤
#        uses: skx/github-action-publish-binaries@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          args: 'build/dam-linux-*'
#
#  build-android:
#    name: Create android apks
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout 🛎️
#        uses: actions/checkout@v2
#
#      - name: Setup Flutter 🧰
#        uses: subosito/flutter-action@v1
#        with:
#          flutter-version: '2.2.2'
#
#      - name: Build 🏭
#        run: make build-android
#      - name: Upload the artifacts 📤
#        uses: skx/github-action-publish-binaries@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          args: 'build/app-arm*'

  build-windows:
    name: Create windows binaries
    runs-on: windows-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Setup Flutter 🧰
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.2.2'

      - name: Build 🏭
        run: |
          flutter config --enable-windows-desktop
          flutter build windows --release
